kind: PersistentVolume
apiVersion: v1
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: "/home/wltd/k8s-volumes/mysql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  type: NodePort # remove if using ClusterIp
  ports:
  - port: 3306
    targetPort: 3306
    nodePort: 32002
  selector:
    app: mysql
  # clusterIp: none # uncomment if using ClusterIp
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:8.0
        name: mysql
        env:
        # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      initContainers:
      - name: setup
        image: mysql:8.0
        command: ['bash', '-c', 'mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "CREATE DATABASE IF NOT EXISTS project_server;"']
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node
  template:
    metadata:
      labels:
        app: node
    spec:
      containers:
      - name: node
        image: learnforward2022/project-server:test
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: node
spec:
  selector:
    app: node
  type: NodePort # remove if using ClusterIp
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 32100
  # clusterIp: none # uncomment if using ClusterIp
